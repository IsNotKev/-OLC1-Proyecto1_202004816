package analizadores;
import java_cup.runtime.*;
import java.util.ArrayList;
import Error.*;
import Instruction.*;

parser code  
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) + " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
        Intruction.list.addError(new Error( "Se detectó un error sintáctico ("+s.value+")"), "Sintáctico",s.left, s.right);
        
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + (s.left)+ " Columna "+s.right+". Componente " + s.value + " no reconocido."); 
        Intruction.list.addError(new Error( "Se detectó un error sintáctico ("+s.value+")"), "Sintáctico",s.left, s.right);
    }  
:} 

terminal LLAVELEFT, LLAVERIGHT;
terminal CONJ, DOSPUNTOS, FLECHA, VIRGULILLA, COMA;
terminal PUNTO,OR,POR,MAS,INTERROGACION;
terminal PUNTOYCOMA, SEPARADOR;
terminal CARACTERMIN, CARACTERMAY, ID, CADENA, DIGITO;

non terminal INICIO;
non terminal ArrayList<ExpresionRegular> INSTRUCCIONES;
non terminal ExpresionRegular INSTRUCCION;
non terminal C
